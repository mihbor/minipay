image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.1"
  ANDROID_COMMAND_LINE_TOOLS: "7583922"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar zip unzip lib32stdc++6 lib32z1
  - mkdir -p android-sdk-linux/cmdline-tools
  - export ANDROID_SDK_ROOT=$PWD/android-sdk-linux
  - cd android-sdk-linux/cmdline-tools
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_COMMAND_LINE_TOOLS}_latest.zip
  - unzip android-sdk.zip
  - rm android-sdk.zip
  - mv cmdline-tools version
  - echo y | version/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | version/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | version/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools/
  # temporarily disable checking for EPIPE error and use yes to accept all licences
  - set +o pipefail
  - yes | version/bin/sdkmanager --licenses
  - set -o pipefail
  - cd ../../

pages:
  stage: build
  script:
    - ./gradlew minidappWithApk
    # Get the previous GitLab Pages content
    - set +e
    - curl --fail "$CI_PAGES_URL/content.zip" -o "content.zip"
    - if [ -e "content.zip" ]; then unzip "content.zip"; rm "content.zip"; else mkdir public; fi
    - set -e
    - rm public/*-SNAPSHOT*
    - cp -r web/build/minidapp/*.zip public/
    - cp -r android/build/outputs/apk/debug/*.apk public/
    - cd public/
    - echo "<html><body><h1>MiniPay</h1>" > ./index.html
    - echo "<h4>MiniDApp downloads:</h4><ul>" >> ./index.html
    - find *.mds.zip -exec echo "<li><a href='{}'>{}</a><br/>" \; >> ./index.html
    - echo "</ul><h4>Android APK downloads:</h4><ul>" >> ./index.html
    - find *.apk -exec echo "<li><a href='{}'>{}</a><br/>" \; >> ./index.html
    - echo "</ul></body></html>" >> ./index.html
    - cd ..
    # Zip the content and publish the zip again
    - zip -r "content.zip" "public"
    - mv "content.zip" "public/"
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH